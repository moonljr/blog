(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{208:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"查看用户代码行数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看用户代码行数"}},[t._v("#")]),t._v(" 查看用户代码行数")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%aN'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -en "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[t._v("\\t")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --author"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v('"')]),t._v(" --pretty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tformat: --numstat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ add += "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("; subs += "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("; loc += "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(' } END { printf "added lines: %s, removed lines: %s, total lines: %s'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("\", add, subs, loc }'")]),t._v(" -"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("h4",{attrs:{id:"查看当前git设置的用户名和邮箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前git设置的用户名和邮箱"}},[t._v("#")]),t._v(" 查看当前git设置的用户名和邮箱")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email\n")])])]),s("h4",{attrs:{id:"全局设置用户名和email："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局设置用户名和email："}},[t._v("#")]),t._v(" 全局设置用户名和email：")]),t._v(" "),s("div",{staticClass:"language-basic extra-class"},[s("pre",{pre:!0,attrs:{class:"language-basic"}},[s("code",[t._v("$ git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("global user."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("name")]),t._v(" author # 将用户名设为author\n\n$ git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("global user.email author@corpmail."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("com")]),t._v(" # 将用户邮箱设为author@corpmail."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("com")]),t._v("\n")])])]),s("h4",{attrs:{id:"设置单个项目-文件内的用户名和email-在命令行环境，进入git项目所在目录，执行下面的命令："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置单个项目-文件内的用户名和email-在命令行环境，进入git项目所在目录，执行下面的命令："}},[t._v("#")]),t._v(" 设置单个项目/文件内的用户名和email 在命令行环境，进入Git项目所在目录，执行下面的命令：")]),t._v(" "),s("div",{staticClass:"language-basic extra-class"},[s("pre",{pre:!0,attrs:{class:"language-basic"}},[s("code",[t._v("$ git config　user."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("name")]),t._v(" nickname#将用户名设为nickname\n\n$ git config　user.email nickname@gmail."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("com")]),t._v("\n")])])]),s("h4",{attrs:{id:"查看-git-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-配置文件"}},[t._v("#")]),t._v(" 查看.git 配置文件")]),t._v(" "),s("div",{staticClass:"language-basic extra-class"},[s("pre",{pre:!0,attrs:{class:"language-basic"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(' Git的全局配置文件是存放在"~'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v('.gitconfig"（用户目录下的.gitconfig）文件中：\n\n$ cat ~'),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(".gitconfig | head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" [user] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" author email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" author@corpmail."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("com")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 而项目配置文件是存放在Git项目所在目录的"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".git/config"')]),t._v("文件中，这里也像上面一样用cat、head命令查看一下：\n\n$ cat .git"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("config | head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" [user] "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nickname email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nickname@gmail."),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("com")]),t._v("\n\n如果大家对于Git熟悉后，可以直修改”~"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(".gitconfig”"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("”.git"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("config”这两个文件进行配置。\n")])])]),s("h4",{attrs:{id:"在git使用过程中有时会遇到修改了-gitignore文件，修改了之后发现，不能起作用，这是因为git存在缓存问题，所以做一下步骤即可："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在git使用过程中有时会遇到修改了-gitignore文件，修改了之后发现，不能起作用，这是因为git存在缓存问题，所以做一下步骤即可："}},[t._v("#")]),t._v(" 在git使用过程中有时会遇到修改了.gitignore文件，修改了之后发现，不能起作用，这是因为git存在缓存问题，所以做一下步骤即可：")]),t._v(" "),s("div",{staticClass:"language-basic extra-class"},[s("pre",{pre:!0,attrs:{class:"language-basic"}},[s("code",[t._v("git rm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cached .\ngit add .\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update gitignore"')]),t._v("\n")])])]),s("h4",{attrs:{id:"git-init-初始化一个-git-仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-init-初始化一个-git-仓库"}},[t._v("#")]),t._v(" "),s("code",[t._v("git init")]),t._v(" 初始化一个 git 仓库")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),s("h4",{attrs:{id:"git-clone-从服务器上克隆一个仓库到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-从服务器上克隆一个仓库到本地"}},[t._v("#")]),t._v(" "),s("code",[t._v("git clone")]),t._v(" 从服务器上克隆一个仓库到本地")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:veedrin/horseshoe.git\n")])])]),s("p",[t._v("这里要说明的是，"),s("code",[t._v("clone")]),t._v("操作并不是将整个仓库下载下来，而是只下载"),s("code",[t._v(".git")]),t._v("目录。因为关于git的一切秘密都在这个目录里面，只要有了它，git就能复原到仓库的任意版本。")]),t._v(" "),s("h4",{attrs:{id:"工作区-working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作区-working-directory"}},[t._v("#")]),t._v(" 工作区(working directory)")]),t._v(" "),s("p",[t._v("工作区，又叫工作目录，就是不包括"),s("code",[t._v(".git")]),t._v("目录的项目根目录。我们要在这个目录下进行手头的工作，它就是版本管理的素材库。你甚至可以称任何与工作有关的目录为工作区，只不过没有"),s("code",[t._v(".git")]),t._v("目录git是不认的。")]),t._v(" "),s("h4",{attrs:{id:"暂存区-stage或者index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存区-stage或者index"}},[t._v("#")]),t._v(" 暂存区(stage或者index)")]),t._v(" "),s("p",[s("code",[t._v("stage")]),t._v("在英文中除了有"),s("code",[t._v("舞台、阶段")]),t._v("之意外，还有作为动词的"),s("code",[t._v("准备、筹划")]),t._v("之意，所谓的暂存区就是一个为提交到版本库做准备的地方。")]),t._v(" "),s("p",[t._v("那它为什么又被称作"),s("code",[t._v("index")]),t._v("呢？因为暂存区在物理上仅仅是"),s("code",[t._v(".git")]),t._v("目录下的"),s("code",[t._v("index")]),t._v("二进制文件。它就是一个索引文件，将工作区中的文件和暂存区中的备份一一对应起来。")]),t._v(" "),s("p",[s("code",[t._v("stage")]),t._v("是表意的，"),s("code",[t._v("index")]),t._v("是表形的。")]),t._v(" "),s("p",[t._v("你可以把暂存区理解为一个猪猪储钱罐。我们还是孩子的时候，手里有一毛钱就会丢进储钱罐里。等到储钱罐摇晃的声音变的浑厚时，或者我们有一个心愿急需用钱时，我们就砸开储钱罐，一次性花完。")]),t._v(" "),s("p",[t._v("类比到软件开发，每当我们写完一个小模块，就可以将它放入暂存区。等到一个完整的功能开发完，我们就可以从暂存区一次性提交到版本库里。")]),t._v(" "),s("p",[t._v("这样做的好处是明显的：")]),t._v(" "),s("ul",[s("li",[t._v("它可以实现更小颗粒度的撤销。")]),t._v(" "),s("li",[t._v("它可以实现批量提交到版本库。")])]),t._v(" "),s("p",[t._v("另外，添加到暂存区其实包含两种操作。一种是将还未被git跟踪过的文件放入暂存区；一种是已经被git跟踪的文件，将有改动的内容放入暂存区。")]),t._v(" "),s("h4",{attrs:{id:"git-add-将文件放入暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-add-将文件放入暂存区"}},[t._v("#")]),t._v(" "),s("code",[t._v("git add .")]),t._v(" 将文件放入暂存区")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md   // 将指定文件放入暂存区\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" src // 将指定目录放入暂存区\n")])])]),s("h4",{attrs:{id:"git-commit-m-提交说明-将文件提交到版本库中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-m-提交说明-将文件提交到版本库中"}},[t._v("#")]),t._v(" "),s("code",[t._v("git commit -m '提交说明'")]),t._v("  将文件提交到版本库中")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'project init'")]),t._v("\n")])])]),s("h4",{attrs:{id:"git-commit-amend命令允许你修改最近的一次commit。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend命令允许你修改最近的一次commit。"}},[t._v("#")]),t._v(" "),s("code",[t._v("git commit --amend")]),t._v("命令允许你修改最近的一次commit。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend\n\n然后执行\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交说明'")]),t._v("\n重新提交\n")])])]),s("h4",{attrs:{id:"git-status-查看文件状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-status-查看文件状态"}},[t._v("#")]),t._v(" "),s("code",[t._v("git status")]),t._v(" 查看文件状态")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])])]),s("h4",{attrs:{id:"git-log-oneline-查看提交历史。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-log-oneline-查看提交历史。"}},[t._v("#")]),t._v(" "),s("code",[t._v("git log --oneline")]),t._v("  查看提交历史。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log --oneline\n\ngit log 查看当前仓库的详细提交历史（commit）\n// commit 71948005382ff8e02dd8d5e8d2b4834428eece24\n// Author: author <author@corpmail.com>\n// Date: Thu Jan 20 12:58:05 2011 +0800\n// Project init\n")])])]),s("h4",{attrs:{id:"git-branch-dev-创建dev分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-dev-创建dev分支"}},[t._v("#")]),t._v(" "),s("code",[t._v("git branch dev")]),t._v(" 创建dev分支")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch dev\n")])])]),s("h4",{attrs:{id:"git-branch-查看本地仓库分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-查看本地仓库分支"}},[t._v("#")]),t._v(" "),s("code",[t._v("git branch")]),t._v(" 查看本地仓库分支")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n// 同时查看本地分支和远端分支引用\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n// 查看每一个分支的最后一次提交\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -v\n// 查看当前详细分支信息（可看到当前分支与对应的远程追踪分支）:\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -vv\n// 查看当前远程仓库信息\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -vv\n\n// 查看所有包含未合并工作的分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --no-merged\n\n// 如果要查看哪些分支已经合并到当前分支，可以运行\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --merged\n")])])]),s("h4",{attrs:{id:"git-branch-d-dev-删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-d-dev-删除分支"}},[t._v("#")]),t._v(" "),s("code",[t._v("git branch -D dev")]),t._v(" 删除分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -D dev  // -D是--delete --force的缩写，你也可以写成-df\n")])])]),s("h4",{attrs:{id:"git-checkout-签出-切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-签出-切换分支"}},[t._v("#")]),t._v(" "),s("code",[t._v("git checkout")]),t._v(" 签出(切换分支)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 切换到HEAD  git checkout命令如果不带任何参数，默认会加上HEAD参数。而HEAD指针指向的就是当前commit。所以它并不会有任何签出动作。\ngit checkout HEAD\n\n// 切换到commit\ngit checkout acb71fe\n\n// 创建分支并切换\n\ngit checkout -b dev\n")])])]),s("h4",{attrs:{id:"git-merge-合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-合并分支"}},[t._v("#")]),t._v(" "),s("code",[t._v("git merge")]),t._v(" 合并分支")]),t._v(" "),s("ul",[s("li",[t._v("合并操作之前必须保证暂存区内没有待提交内容，否则git会阻止合并。这是因为合并之后，git会将合并后的版本覆盖暂存区。所以会有丢失工作成果的危险。")]),t._v(" "),s("li",[t._v("至于工作区有待添加到暂存区的内容，git倒不会阻止你。可能git觉得它不重要吧。")]),t._v(" "),s("li",[t._v("不过最好还是保持一个干净的工作区再执行合并操作")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git merge dev   // git merge后跟合并客体，表示要将它合并进来。 当前master分支上 git merge dev  将dev分支合并到master上\n")])])]),s("h4",{attrs:{id:"git-stash-储藏工作区和暂存区的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-储藏工作区和暂存区的内容"}},[t._v("#")]),t._v(" "),s("code",[t._v("git stash")]),t._v(" 储藏工作区和暂存区的内容")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n")])])]),s("h4",{attrs:{id:"git-stash-list查看储藏列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-list查看储藏列表"}},[t._v("#")]),t._v(" "),s("code",[t._v("git stash list")]),t._v("查看储藏列表")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash list\n")])])]),s("h4",{attrs:{id:"git-stash-apply-index-恢复储藏的内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-apply-index-恢复储藏的内容"}},[t._v("#")]),t._v(" "),s("code",[t._v("git stash apply --index")]),t._v(" 恢复储藏的内容")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash apply --index  // 加一个参数--index就会让工作区的归工作区，让暂存区的归暂存区。\n// git stash apply仅仅是恢复了最新的那一次储藏。\n\ngit stash apply stash@{1} // 指定储藏的名字，我们就可以恢复列表中的任意储藏了。\n")])])]),s("h4",{attrs:{id:"git-stash-drop-清理储藏列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-drop-清理储藏列表"}},[t._v("#")]),t._v(" "),s("code",[t._v("git stash drop")]),t._v("  清理储藏列表")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash drop stash@{1} // 清理指定储藏内容\n")])])]),s("h4",{attrs:{id:"git-stash-pop-同时恢复储藏和清理储藏。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-pop-同时恢复储藏和清理储藏。"}},[t._v("#")]),t._v(" "),s("code",[t._v("git stash pop")]),t._v(" 同时恢复储藏和清理储藏。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash pop\n")])])]),s("h4",{attrs:{id:"git-push-将版本库的内容推送到远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-将版本库的内容推送到远程仓库"}},[t._v("#")]),t._v(" "),s("code",[t._v("git push")]),t._v("   将版本库的内容推送到远程仓库")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("   将本地分支推送 远程仓库 这样远程仓库中也就创建了一个test分支\n\n本地分支与远程分支关联起来\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("本地分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("远程分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n建立追踪关系，在现有分支和指定的远程分支之间\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-up-tream "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-branch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete dev 删除远程分支\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase 避免自动合并\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin -d dev 删除远程分支\n")])])]),s("h4",{attrs:{id:"git-分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[t._v("#")]),t._v(" GIT 分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('创建分支：git branch cheny\n切换到分支：git checkout cheny\n添加修改代码到缓存：git add .\n提交：git commit -m "修改"\n提交到分支：git push origin cheny/git push --set-upstream origin cheny\n')])])]),s("h3",{attrs:{id:"git-标签管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-标签管理"}},[t._v("#")]),t._v(" GIT 标签管理")]),t._v(" "),s("ul",[s("li",[t._v("查看所有标签")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在控制台打印出当前仓库的所有标签")]),t._v("\n")])])]),s("ul",[s("li",[t._v("查看标签的详细信息")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show v1.0\n")])])]),s("ul",[s("li",[t._v("创建标签")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.0 -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is test version 1.0'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建附注标签时，参数a即annotated的缩写，指定标签类型，后附标签名。参数m指定标签说明，说明信息会保存在标签对象中。")]),t._v("\n")])])]),s("ul",[s("li",[t._v("给忘记创建标签的历史提交创建标签")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首先查看历史提交的各commit_id")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a808270 (HEAD -> master, tag: v1.0, test/master) 又新增了一行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 599f2ba rrrr")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 05ca835 22222")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a5c6877 add an row")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cceb71d add test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0e51a5c first row")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如我要对第四次提交创建标签，在命令后面加上commit_id即可。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v0.5 a5c6877 -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v0.5'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("切换标签")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与切换分支命令相同\t git checkout [tagname]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout v0.1\n")])])]),s("ul",[s("li",[t._v("将本地标签推送到远处分支")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一次性推送全部尚未推送到远程的本地标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --tags\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送某个标签到远程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin v1.0\n")])])]),s("ul",[s("li",[t._v("删除本地与远程分支标签")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d v0.8\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/v0.8\n")])])]),s("ul",[s("li",[t._v("通过标签获取远程版本")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin tag V1.2  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这样我们可以精准拉取指定的某一个版本.适用于运维同学部署指定版本.")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);