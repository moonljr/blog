(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{190:function(e,n,a){"use strict";a.r(n);var t=a(0),s=Object(t.a)({},function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"npm常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm常用命令","aria-hidden":"true"}},[e._v("#")]),e._v(" npm常用命令")]),e._v(" "),a("h3",{attrs:{id:"查看全局安装过的包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看全局安装过的包","aria-hidden":"true"}},[e._v("#")]),e._v(" 查看全局安装过的包")]),e._v(" "),a("p",[a("code",[e._v("npm list -g --depth 0")])]),e._v(" "),a("h3",{attrs:{id:"设置npm镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置npm镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" 设置npm镜像")]),e._v(" "),a("p",[a("code",[e._v("npm config set registry https://registry.npm.taobao.org --global")]),e._v(" "),a("code",[e._v("npm config set disturl https://npm.taobao.org/dist --global")])]),e._v(" "),a("h3",{attrs:{id:"查看npm镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看npm镜像","aria-hidden":"true"}},[e._v("#")]),e._v(" 查看npm镜像")]),e._v(" "),a("p",[a("code",[e._v("npm config get registry")])]),e._v(" "),a("h2",{attrs:{id:"nrm是切换npm源很简单方便的工具，跟其他工具一样，第一步进行全局安装："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nrm是切换npm源很简单方便的工具，跟其他工具一样，第一步进行全局安装：","aria-hidden":"true"}},[e._v("#")]),e._v(" nrm是切换npm源很简单方便的工具，跟其他工具一样，第一步进行全局安装：")]),e._v(" "),a("p",[a("code",[e._v("npm install nrm -g")])]),e._v(" "),a("p",[e._v("nrm 几条常用的命令：")]),e._v(" "),a("p",[a("code",[e._v("nrm ls")]),e._v("//查看可选的源列表:")]),e._v(" "),a("p",[a("code",[e._v("npm ---- https:``//registry.npmjs.org/")])]),e._v(" "),a("p",[a("code",[e._v("cnpm --- http:``//r.cnpmjs.org/")])]),e._v(" "),a("p",[a("code",[e._v("* taobao - https:``//registry.npm.taobao.org/")])]),e._v(" "),a("p",[a("code",[e._v("nrm test")]),e._v("//查看每个源的响应时间(仅做参考)：")]),e._v(" "),a("p",[a("code",[e._v("npm ---- 758ms")])]),e._v(" "),a("p",[a("code",[e._v("cnpm --- 212ms")])]),e._v(" "),a("p",[a("code",[e._v("* taobao - 105ms")])]),e._v(" "),a("p",[a("code",[e._v("nrm use taobao")]),e._v("//切换源(前面*号表示正在使用的源)")]),e._v(" "),a("p",[a("code",[e._v("nrm add")]),e._v("//添加源")]),e._v(" "),a("p",[e._v("``nrm del     `//删除源")]),e._v(" "),a("p",[e._v("用nrm use切换源后，查看是否切换成功，可以使用nrm ls查看")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm init 在此目录生成package.json文件，可以添加-y | --yes 参数则默认所有配置为默认yes\n\nnpm install <package> -g 全局安装\n\nnpm install --production 安装dependencies，不包含devDependencies\n\n\nnpm install packagename --save 或 -S\n\n--save、-S参数意思是把模块的版本信息保存到dependencies（生产环境依赖）中，即你的package.json文件的dependencies字段中；\n\nnpm install packagename --save-dev 或 -D\n\n--save-dev 、 -D参数意思是吧模块版本信息保存到devDependencies（开发环境依赖）中，即你的package.json文件的devDependencies字段中；\n\nnpm install <package> 默认使用–save 参数，如果不想保存到package.json中，可以添加--no-save参数；还可以指定–save-dev 或 -g参数\n\nnpm uninstall <package> 卸载依赖包， 默认使用–save参数，即从package.json中移除\n\nnpm ls [-g] [--depth=0] 查看当前目录或全局的依赖包，可指定层级为0\n\nnpm outdated 查看当前过期依赖，其中current显示当前安装版本，latest显示依赖包的最新版本，wanted显示我们可以升级到可以不破坏当前代码的版本\n\nnpm root -g 查看全局安装地址\n\nnpm update <package> 升级依赖包版本\n\nnpm ll[la] [--depth=0] 查看依赖包信息\n\nnpm list <package>查看依赖的当前版本\n\nnpm search <string> 查找包含该字符串的依赖包\n\nnpm view <package> [field] [--json]列出依赖信息，包括历史版本，可以指定field来查看某个具体信息，比如（versions) 可以添加–json参数输出全部结果\n\nnpm home <package> 在浏览器端查看项目（项目主页）\n\nnpm repo <package> 浏览器端打开项目地址（GitHub）\n\nnpm docs <packge> 查看项目文档\n\nnpm bugs <packge> 查看项目bug\n\nnpm prune 移除当前不在package.json中但是存在node_modules中的依赖\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install packagename --save-optional 或 -O\n\n--save-optional 、 -O参数意思是把模块安装到optionalDependencies（可选环境依赖）中，即你的package.json文件的optionalDependencies字段中。（本人菜鸟一枚，一直也没理解这个，不过看到了就记录一下吧，万一哪天用到了，说不准就懂了......）\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install packagename -g 或 --global\n")])])]),a("p",[e._v("安装全局的模块（不加参数的时候默认安装本地模块）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm list 或 npm ll 或 npm la 或 npm ls\n\n查看所有已经安装的模块 `ll` 、 `ls` 、 `la` 三个命令意思都一样 但是列表的展示方式不一样 喜欢用哪个就看个人喜好了,不懂的同学可以每个都去试下。\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm uninstall packagename [options]\n\n卸载已经安装的模块，后面的options参数意思与安装时候的意思一样,与这个命令相同的还有`npm remove `、`npm rm`、`npm r` 、 `npm un` 、 `npm unlink` 这几个命令功能和`npm uninstall`基本一样，个人觉得没什么区别。\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm outdated\n")])])]),a("p",[e._v("这个命令会列出所有已经过时了的模块，对于已经过时了的模块可以使用下面的命令去更新")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm update [-g]\n")])])]),a("p",[e._v("更新已经安装的模块(或全局的模块)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm help '命令'\n")])])]),a("p",[e._v("查看某条命令的详细帮助")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm root\n")])])]),a("p",[e._v("查看命令的绝对路径")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm config\n")])])]),a("p",[e._v("设置npm命令的配置路径，这个命令一般用于设置代理，毕竟大部分都是国外的模块，不过个人还是比较喜欢用"),a("code",[e._v("cnpm")]),e._v(" 这个命令是用的淘宝的镜像，用法与npm一样，速度还可以。")]),e._v(" "),a("p",[e._v("除去以上的这些命令外，经常还能见到一些"),a("code",[e._v("npm start")]),e._v("、"),a("code",[e._v("npm deploy")]),e._v("、 "),a("code",[e._v("npm build")]),e._v("等等之类的命令，这些一般都是在package.json 中自定义的一些启动、重启、停止服务之类的命令。可以在package.json文件的scripts字段里自定义。例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n    "build": "webpack",\n    "start": "webpack-dev-server main.js,\n    "deploy": "set NODE_ENV=production"\n  }\n')])])]),a("h3",{attrs:{id:"npm命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm命令选项","aria-hidden":"true"}},[e._v("#")]),e._v(" npm命令选项")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("选项")]),e._v(" "),a("th",[e._v("说明")]),e._v(" "),a("th",[e._v("示例（部分以express为例）")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("search")]),e._v(" "),a("td",[e._v("在存储库中查找模块包")]),e._v(" "),a("td",[a("code",[e._v("npm search express")])])]),e._v(" "),a("tr",[a("td",[e._v("install")]),e._v(" "),a("td",[e._v("使用在存储库或本地位置上的一个package.json文件来安装包")]),e._v(" "),a("td",[a("code",[e._v("npm install")]),e._v(" "),a("code",[e._v("npm install express")]),e._v(" "),a("code",[e._v("npm install express@0.1.1")]),e._v(" "),a("code",[e._v("npm install express@latest")]),e._v(" "),a("code",[e._v("npm install ../tModule.tgz")])])]),e._v(" "),a("tr",[a("td",[e._v("install -g")]),e._v(" "),a("td",[e._v("在全局可访问的位置安装一个包")]),e._v(" "),a("td",[a("code",[e._v("npm install express -g")])])]),e._v(" "),a("tr",[a("td",[e._v("uninstall")]),e._v(" "),a("td",[e._v("卸载一个模块")]),e._v(" "),a("td",[a("code",[e._v("npm uninstall express")])])]),e._v(" "),a("tr",[a("td",[e._v("remove")]),e._v(" "),a("td",[e._v("删除一个模块")]),e._v(" "),a("td")]),e._v(" "),a("tr",[a("td",[e._v("pack")]),e._v(" "),a("td",[e._v("把在一个package.json文件中定义的模块封装成.tgz文件")]),e._v(" "),a("td",[a("code",[e._v("npm pack")])])]),e._v(" "),a("tr",[a("td",[e._v("view")]),e._v(" "),a("td",[e._v("显示模块的详细信息")]),e._v(" "),a("td",[a("code",[e._v("npm view express")])])]),e._v(" "),a("tr",[a("td",[e._v("publish")]),e._v(" "),a("td",[e._v("把在一个package.json文件中定义的模块发布到注册表")]),e._v(" "),a("td",[a("code",[e._v("npm publish")])])]),e._v(" "),a("tr",[a("td",[e._v("unpublish")]),e._v(" "),a("td",[e._v("取消发布您已发布到注册表的一个模块（在某些情况下，还需使用 "),a("code",[e._v("--force")]),e._v(" 选项）")]),e._v(" "),a("td",[a("code",[e._v("npm unpublish myModule")])])]),e._v(" "),a("tr",[a("td",[e._v("owner")]),e._v(" "),a("td",[e._v("允许您在存储库中添加、删除包和列出包的所有者")]),e._v(" "),a("td",[a("code",[e._v("npm add <username> myModule")]),e._v(" "),a("code",[e._v("npm rm <username> myModule")]),e._v(" "),a("code",[e._v("npm ls myModule")])])]),e._v(" "),a("tr",[a("td",[e._v("whoami")]),e._v(" "),a("td",[e._v("（根据指定注册表模块）打印用户名")]),e._v(" "),a("td",[a("code",[e._v("npm whoami")])])]),e._v(" "),a("tr",[a("td",[e._v("adduser")]),e._v(" "),a("td",[e._v("将用户信息添加到当前的开发环境")]),e._v(" "),a("td",[a("code",[e._v("npm adduser")])])]),e._v(" "),a("tr",[a("td",[e._v("login")]),e._v(" "),a("td",[e._v("等同于adduser")]),e._v(" "),a("td",[a("code",[e._v("npm login")])])]),e._v(" "),a("tr",[a("td",[e._v("logout")]),e._v(" "),a("td",[e._v("将用户信息从当前的开发环境中清除")]),e._v(" "),a("td",[a("code",[e._v("npm logout")])])]),e._v(" "),a("tr",[a("td",[e._v("init")]),e._v(" "),a("td",[e._v("初始化Node包的信息，会创建package.json文件")]),e._v(" "),a("td",[a("code",[e._v("npm init")])])])])])])},[],!1,null,null,null);n.default=s.exports}}]);