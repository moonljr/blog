(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{216:function(s,t,e){"use strict";e.r(t);var a=e(0),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" docker")]),s._v(" "),e("h3",{attrs:{id:"设置docker-开机自启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置docker-开机自启动"}},[s._v("#")]),s._v(" 设置docker 开机自启动")]),s._v(" "),e("ul",[e("li",[s._v("查看已启动的服务 "),e("code",[s._v("systemctl list-units --type=service")])]),s._v(" "),e("li",[s._v("查看是否设置开机启动 "),e("code",[s._v("systemctl list-unit-files | grep enable")])]),s._v(" "),e("li",[s._v("设置开机启动 "),e("code",[s._v("systemctl enable docker.service")])]),s._v(" "),e("li",[s._v("关闭开机启动 "),e("code",[s._v("systemctl disable docker.service")])])]),s._v(" "),e("h3",{attrs:{id:"设置docker容器自动启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置docker容器自动启动"}},[s._v("#")]),s._v(" 设置docker容器自动启动")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("启动时加--restart=always")]),s._v(" "),e("blockquote",[e("p",[s._v("示例： docker run -tid --name isaler_v0.0.11 -p 8081:8080 --restart=always -v /alidata/iDocker/run/projectImages/isaler/v0.0.11/log:/usr/local/tomcat/logs isaler_v0.0.11")])])]),s._v(" "),e("li",[e("p",[s._v("如果已经启动的项目，则使用update更新："),e("code",[s._v("docker update --restart=always isaler_v0.0.11 always后边跟容器的ID 或名称")])])])]),s._v(" "),e("blockquote",[e("p",[s._v("restart 的值\nFlag\tDescription\nno\t\t不自动重启容器. (默认value)\non-failure \t容器发生error而退出(容器退出状态不为0)重启容器\nunless-stopped \t在容器已经stop掉或Docker stoped/restarted的时候才重启容器\nalways \t在容器已经stop掉或Docker stoped/restarted的时候才重启容器")])]),s._v(" "),e("h4",{attrs:{id:"docker常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[s._v("#")]),s._v(" docker常用命令")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v(" docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前正在运行的容器")]),s._v("\n docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有容器的状态")]),s._v("\n docker start/stop id/name "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动/停止某个容器")]),s._v("\n docker attach "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入某个容器(使用exit退出后容器也跟着停止运行)")]),s._v("\n docker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -ti "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动一个伪终端以交互式的方式进入某个容器（使用exit退出后容器不停止运行）")]),s._v("\n docker images "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地镜像")]),s._v("\n docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" id/name "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除某个容器")]),s._v("\n docker rmi id/name "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除某个镜像")]),s._v("\n docker run --name "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -ti ubuntu /bin/bash  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制ubuntu容器并且重命名为test且运行，然后以伪终端交互式方式进入容器，运行bash")]),s._v("\n docker build -t soar/centos:7.1 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过当前目录下的Dockerfile创建一个名为soar/centos:7.1的镜像")]),s._v("\n docker run -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v(":22 --name "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" soar/centos:7.1  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以镜像soar/centos:7.1创建名为test的容器，并以后台模式运行，并做端口映射到宿主机2222端口，P参数重启容器宿主机端口会发生改变")]),s._v("\n")])])]),e("h3",{attrs:{id:"docker-三要素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-三要素"}},[s._v("#")]),s._v(" docker 三要素")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("仓库")]),s._v(" "),e("blockquote",[e("p",[s._v("放了一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候从仓储中拉下来就可以了")])])]),s._v(" "),e("li",[e("p",[s._v("镜像")]),s._v(" "),e("blockquote",[e("p",[s._v("image 文件生成的容器实例，本身也是一个文件， 称为镜像文件")])])]),s._v(" "),e("li",[e("p",[s._v("容器")]),s._v(" "),e("blockquote",[e("p",[s._v("一个容器运行一种服务，当我们需要的时候，就可以通过docker客户端创建一个对应的运行实例，也就是我们的容器")])])])]),s._v(" "),e("h3",{attrs:{id:"安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[s._v("#")]),s._v(" 安装docker")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("CentOs 7.X 安装")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("首选查看linux的版本 执行 "),e("code",[s._v("cat /etc/redhat-release")]),s._v("命令")])]),s._v(" "),e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/redhat-release")]),s._v("\nCentOS Linux release "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.6")]),s._v(".1810 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Core"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("yum 安装")]),s._v(" "),e("ul",[e("li",[s._v("yum -y install gcc")]),s._v(" "),e("li",[s._v("yum -y install gcc- c++")])])]),s._v(" "),e("li",[e("p",[s._v("卸载旧版本")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum remove docker "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("安装docker 依赖包")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yum install -y yum-utils \\\n  device-mapper-persistent-data \\\n  lvm2\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("修改下载源(设置yum源) 也可以使用国内的阿里云源")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum-config-manager "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --add-repo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("更新yum软件包索引")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum makecache fast\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("安装docker")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("启动docker")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl start docker\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("开机自启动 "),e("code",[s._v("systemctl enable docker.service")])])]),s._v(" "),e("li",[e("p",[s._v("检测是否安装成功")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("docekr version\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("修改centos7 的镜像地址（镜像加速配置）")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("/etc/docker/daemon.json  (如果没有这个文件就创建这个文件)")])]),s._v(" "),e("li",[e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"registry-mirrors"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://t4pbff1n.mirror.aliyuncs.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阿里云或网易云加速镜像地址")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])]),s._v(" "),e("li",[e("p",[s._v("systemctl daemon-reload  重新加载daemon")])]),s._v(" "),e("li",[e("p",[s._v("systemctl restart docker  重启 docker")])]),s._v(" "),e("li",[e("p",[s._v("检测是否加速成功")])]),s._v(" "),e("li",[e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" docker"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v("\n")])])])])])]),s._v(" "),e("li",[e("p",[s._v("卸载docker")]),s._v(" "),e("ul",[e("li",[s._v("systemctl stop docker  停止docker")]),s._v(" "),e("li",[s._v("yum -y remove docker-ce 卸载docker")]),s._v(" "),e("li",[s._v("rm -rf /var/lib/docker 删除镜像文件")])])])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);